Creating Typechain artifacts in directory typechain for target ethers-v5
Successfully generated Typechain artifacts!


  ZapCoordinator
    ✓ COORDINATOR_1 - addImmutableContract() - Check that we can set the DATABASE to provider
    ✓ COORDINATOR_2 - addImmutableContract() - Check that we can't set the DATABASE to a null address
    ✓ COORDINATOR_3 - addImmutableContract() - Check that when we set the DATABASE it updates db
    ✓ COORDINATOR_4 - getContract() - Check that we can get the DATABASE address after setting it
    ✓ COORDINATOR_5 - getContractName() - Check that DATABASE doesn't add to loadedContracts
    ✓ COORDINATOR_6 - updateContract() - Check that we can update REGISTRY (54ms)
    ✓ COORDINATOR_7 - updateContract() - Check that we can update REGISTRY twice (311ms)
    ✓ COORDINATOR_8 - getContract() - Check that we get the REGISTRY address after updateContract (66ms)
    ✓ COORDINATOR_9 - getContract() - Check that we get the REGISTRY address after two updateContracts (205ms)

  Database_Deployment
    ✓ owner() - Check if the owner is valid

  Database_Transactions
    ✓ setStorageContract() - Check if the event "StorageModified" is emitted after the owner calls the function (65ms)
TRANSACTION: 
    ✓ setStorageContract() - Fails if anyone but the owner runs the function (42ms)
TRANSACTION: 
    ✓ setStorageContract() - Succeeds when the owner of the contract calls the function (60ms)
    ✓ setIntArray() - Succeeds when the owner of the contract calls the function (72ms)

  Faucet_Deployment
    ✓ owner() - Check if the owner is valid

  Faucet_Transactions
    ✓ rate() - Check if the rate is 1 ETH for 1000 ZAP
    ✓ balanceOf() - Check if the balance is equivalent to the initial allocated amount
    ✓ withdrawTok() -Check if the withdrawTok function withdraws all test ZAP from the Faucet (158ms)
    1) buyZap() - Check if the buyZap function is able to disperse 100,000 test ZAP to signers
    2) buyZap() - Check if 100,000 test ZAP is available in the signers balance
    3) buyZap() - Check if the Faucet balance subtracts the dispersed 100,000 test ZAP
    ✓ withdrawTok() - Check if the withdrawEther function invokes  (48ms)


  19 passing (14s)
  3 failing

  1) Faucet_Transactions
       buyZap() - Check if the buyZap function is able to disperse 100,000 test ZAP to signers:
     ProviderError: Transaction reverted without a reason
      at HttpProvider.request (node_modules/hardhat/src/internal/core/providers/http.ts:46:19)
      at GanacheGasMultiplierProvider.request (node_modules/hardhat/src/internal/core/providers/gas-providers.ts:170:34)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:97:5)

  2) Faucet_Transactions
       buyZap() - Check if 100,000 test ZAP is available in the signers balance:
     ProviderError: Transaction reverted without a reason
      at HttpProvider.request (node_modules/hardhat/src/internal/core/providers/http.ts:46:19)
      at GanacheGasMultiplierProvider.request (node_modules/hardhat/src/internal/core/providers/gas-providers.ts:170:34)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:97:5)

  3) Faucet_Transactions
       buyZap() - Check if the Faucet balance subtracts the dispersed 100,000 test ZAP:
     ProviderError: Transaction reverted without a reason
      at HttpProvider.request (node_modules/hardhat/src/internal/core/providers/http.ts:46:19)
      at GanacheGasMultiplierProvider.request (node_modules/hardhat/src/internal/core/providers/gas-providers.ts:170:34)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:97:5)



